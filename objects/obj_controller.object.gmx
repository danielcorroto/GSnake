<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Comportamiento de la aplicación
os_powersave_enable(false);

// Vidas de cada elemento de la serpiente
lives = 5;
// Si el juego está en funcionamiento
started = false;
// Tiempo de espera para moverse
wait = WAIT_TIME;
// Zona de aparición de la serpiente
xzone = floor(room_width / SNAKE_SIZE / 2) - 1;
yzone = floor(room_height / SNAKE_SIZE / 2) - 1;
// Ubicación de la fruta
xfruit = -1;
yfruit = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!started) {
    exit;
}

// Reduce la "vida" de cada eslabón de la serpiente
show_debug_message("--");
for (i=0; i&lt;instance_number(obj_snake); i++) {
    inst = instance_find(obj_snake,i);
    inst.live--;
    show_debug_message(string(i) + " " + string(inst.live));
}
// Elimina el eslabón
for (i=0; i&lt;instance_number(obj_snake); i++) {
    inst = instance_find(obj_snake,i);
    if (inst.live &lt;= 0) {
        show_debug_message(string(i) + " removed");
        with (inst) {
            instance_destroy();
        }
    }
}
// Obtiene datos del acelerómetro
xx = device_get_tilt_x();
yy = device_get_tilt_y();

if (abs(yy) &gt; abs(xx)) {
    // Movimiento horizontal
    if (yy &gt; 0) {
        xzone++;
    } else {
        xzone--;
    }
} else {
    // Movimiento vertical
    if (xx &gt; 0) {
        yzone++;
    } else {
        yzone--;
    }
}

// Finaliza la partida si hay colisión
for (i=0; i&lt;instance_number(obj_snake); i++) {
    inst = instance_find(obj_snake,i);
    if (inst.x == xzone * SNAKE_SIZE and
    inst.y == yzone * SNAKE_SIZE) {
        game_restart();
    }
}

// Reinicia la partida si se sale 
if (xzone * SNAKE_SIZE &gt;= room_width or
    xzone &lt; 0 or
    yzone * SNAKE_SIZE &gt;= room_height or
    yzone &lt; 0) {
    game_restart();
}

// Crea nueva serpiente
inst = instance_create(xzone * SNAKE_SIZE, yzone * SNAKE_SIZE, obj_snake);
inst.image_xscale = SNAKE_SIZE / inst.sprite_width;
inst.image_yscale = SNAKE_SIZE / inst.sprite_height;
alarm_set(0, wait);

// Evalúa si consigue la fruta
if (xzone == xfruit and yzone == yfruit) {
    score++;
    xfruit = -1;
    yfruit = -1;
    with(instance_find(obj_fruit, 0)) {
        instance_destroy();
    }
}

// Genera una nueva fruta
if (xfruit == -1) {
    count = 0;
    for (i=0; i&lt;room_width / SNAKE_SIZE; i++) {
        for (j=0; j&lt;room_height / SNAKE_SIZE; j++) {
            if (
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Inicia el juego
if (!started) {
    started = true;
    alarm_set(0, 1);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
